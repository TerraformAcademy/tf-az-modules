name: Omniflow CI/CD

on:
  workflow_dispatch:

env:
  DOTNET_VERSION: '6.0.x'
  NODE_VERSION: '16.x'

jobs:
  checkout-and-build:
    runs-on: ubuntu-latest

    steps:
    - name: Clone Azure DevOps Repo
      run: |
        git config --global user.name "GitHubActions"
        git config --global user.email "actions@github.com"
        git clone https://${{ secrets.AZURE_DEVOPS_PAT }}@dev.azure.com/YOUR_ORG/YOUR_PROJECT/_git/YOUR_REPO repo
        ls repo
      env:
        AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Build WebAPI
      run: |
        cd repo/WebAPI
        dotnet restore
        dotnet build

    - name: Test WebAPI
      run: |
        cd repo/Tests.WebAPI
        dotnet test

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Build PortalApp
      run: |
        cd repo/PortalApp/ClientApp
        npm ci
        cd src/config && rm webapi.config.ts && mv webapi.config.prod.ts webapi.config.ts
        cd ..
        npm run build

    - name: Build DesignerApp
      run: |
        cd repo/DesignerApp/TaskPane
        npm ci
        rm manifest.xml && mv manifest.stg.xml manifest.xml
        cd src/config && rm webapi.config.ts && mv webapi.config.prod.ts webapi.config.ts
        cd ../..
        export NODE_OPTIONS=--max-old-space-size=4096
        npm run build

    - name: Upload WebAPI Artifact
      uses: actions/upload-artifact@v4
      with:
        name: WebAPI
        path: repo/WebAPI

    - name: Upload PortalApp dist
      uses: actions/upload-artifact@v4
      with:
        name: PortalApp-dist
        path: repo/PortalApp/ClientApp/dist

    - name: Upload DesignerApp dist
      uses: actions/upload-artifact@v4
      with:
        name: DesignerApp-dist
        path: repo/DesignerApp/TaskPane/dist

  docker-and-deploy:
    runs-on: ubuntu-latest
    needs: checkout-and-build

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: acrflowchartstgeus.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and Push PortalApp Image
      uses: docker/build-push-action@v5
      with:
        context: ./artifacts/PortalApp-dist
        file: ./artifacts/WebAPI/docker/Dockerfile
        push: true
        tags: acrflowchartstgeus.azurecr.io/portal:latest

    - name: Build and Push DesignerApp Image
      uses: docker/build-push-action@v5
      with:
        context: ./artifacts/DesignerApp-dist
        file: ./artifacts/WebAPI/docker/Dockerfile
        push: true
        tags: acrflowchartstgeus.azurecr.io/designer:latest

    - name: Build and Push Backend Image
      uses: docker/build-push-action@v5
      with:
        context: ./artifacts/WebAPI
        file: ./artifacts/WebAPI/Dockerfile
        push: true
        tags: acrflowchartstgeus.azurecr.io/backend:latest

    - name: Update Azure Container Apps
      uses: azure/CLI@v1
      with:
        azcliversion: 2.55.0
